FROM golang:1.24-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git ca-certificates tzdata

# Set working directory
WORKDIR /app

# Copy go.mod and go.sum files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the application with optimizations
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
    -ldflags="-w -s -X main.version=$(git describe --tags --always) -X main.buildTime=$(date +%Y-%m-%dT%H:%M:%S)" \
    -o bin/api ./cmd/api

# Create a minimal production image
FROM alpine:3.19

# Install runtime dependencies
RUN apk add --no-cache ca-certificates tzdata curl

# Set working directory
WORKDIR /app

# Copy the binary from the builder stage
COPY --from=builder /app/bin/api /app/bin/api

# Copy necessary files
COPY --from=builder /app/migrations /app/migrations

# Create a non-root user to run the application
RUN adduser -D -g '' appuser
RUN chown -R appuser:appuser /app
USER appuser

# Expose the application port
EXPOSE 8080

# Set the entry point
ENTRYPOINT ["/app/bin/api"]
