version: "3.8"

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - "8080:8080"
        environment:
            - DB_HOST=postgres
            - DB_PORT=5432
            - DB_USER=postgres
            - DB_PASSWORD=postgres
            - DB_NAME=todo_db
            - JWT_SECRET=your_jwt_secret_key_here
            - ENV=development
        depends_on:
            - postgres
        restart: unless-stopped
        volumes:
            - ./:/app
        networks:
            - todo-network

    postgres:
        image: postgres:16-alpine
        ports:
            - "5432:5432"
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=todo_db
        volumes:
            - postgres-data:/var/lib/postgresql/data
        networks:
            - todo-network
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 5s
            timeout: 5s
            retries: 5

    prometheus:
        image: prom/prometheus:latest
        container_name: prometheus
        ports:
            - "9090:9090"
        volumes:
            - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
            - prometheus-data:/prometheus
        command:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
            - "--web.console.libraries=/etc/prometheus/console_libraries"
            - "--web.console.templates=/etc/prometheus/consoles"
            - "--web.enable-lifecycle"
        restart: unless-stopped
        networks:
            - todo-network

    grafana:
        image: grafana/grafana:latest
        container_name: grafana
        ports:
            - "3000:3000"
        environment:
            - GF_SECURITY_ADMIN_USER=admin
            - GF_SECURITY_ADMIN_PASSWORD=admin
            - GF_USERS_ALLOW_SIGN_UP=false
        volumes:
            - grafana-data:/var/lib/grafana
            - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
            - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
        restart: unless-stopped
        depends_on:
            - prometheus
        networks:
            - todo-network

networks:
    todo-network:
        driver: bridge

volumes:
    postgres-data:
    prometheus-data:
    grafana-data:
